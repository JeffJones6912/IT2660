public class Stack
{
	private Listing[] data;
	private int top;
	private int size;
	public Stack()
	{
		top = -1;
		size = 100;
		data = new Listing[100];
	}
	public Stack(int j)
	{
		top = -1;
		size = j;
		data = new Listing[j];
	}
	public boolean push(Listing newNode)
	{
		Listing[] temp = new Listing[size + 1];
		if(top == size - 1)
		{
			for(int i = 0; i < size - 1; i++)
				data[i] = temp[i];
			return true; // **overflow error**
		}
		else
		{
			top = top + 1;
			data[top] = newNode.deepCopy();
			return true; // *push operation successful
		}
	}
	public Listing pop()
	{
		int topLocation;
		if(top == -1)
			return null; // *underflow error
			else
			{
				topLocation = top;
				top = - 1;
				return data[topLocation];
			}
	}
	public void showAll()
	{
		for(int i = top; i >= 0; i--)
			System.out.println(data[i].toString());
	}
	public boolean underflow()
	{
		if(top == -1)
			return true;
		else
			return false;
	}
	public boolean overflow()
	{
		if(top == size - 1)
			return true;
		else
			return false;
	}
	public void emptyStack()
	{
		if(top == -1)
			System.out.println("Stack is empty already.");
	}
}
